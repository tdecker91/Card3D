name: "godot-ci build"

on:
  push:
    branches: [main]
  pull_request:

env:
  GODOT_VERSION: 4.4
  EXPORT_NAME: Card3D
  PROJECT_PATH: .

jobs:
  quality:
    name: GDScript Quality Check
    runs-on: ubuntu-22.04
    steps: 
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install gdtoolkit
        run: |
          pip3 install "gdtoolkit==4.*"

      - name: Lint GDScript
        run: |
          echo "=== Linting all GDScript files ==="
          find . -name "*.gd" -type f | xargs gdlint
          echo "âœ… GDScript linting completed successfully"

  export-web:
    name: Web Export
    needs: quality
    runs-on: ubuntu-22.04  # Use 22.04 with godot 4
    container:
      image: barichello/godot-ci:4.4
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          # Ensure export templates directory exists
          mkdir -v -p ~/.local/share/godot/export_templates/
          
          # Debug: Check what paths we're working with
          echo "HOME is: $HOME"
          echo "~ expands to: $(eval echo ~)"
          echo "/root and ~ are the same: $([ "/root" = "$(eval echo ~)" ] && echo "yes" || echo "no")"
          
          # Only copy if source and destination are different
          SOURCE_DIR="/root/.local/share/godot/export_templates/${GODOT_VERSION}.stable"
          DEST_DIR="$HOME/.local/share/godot/export_templates/${GODOT_VERSION}.stable"
          
          if [ -d "$SOURCE_DIR" ] && [ "$SOURCE_DIR" != "$DEST_DIR" ] && [ ! -d "$DEST_DIR" ]; then
            echo "Copying templates from $SOURCE_DIR to $DEST_DIR"
            cp -r "$SOURCE_DIR" "$DEST_DIR"
          else
            echo "Templates already in place or paths are identical"
          fi
      - name: Web Build
        run: |
          mkdir -v -p build/web
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "cards-web" "$EXPORT_DIR/web/index.html"
      - name: Upload Artifact
        if: ${{ !env.ACT }}
        uses: actions/upload-artifact@v4
        with:
          name: web
          path: build/web